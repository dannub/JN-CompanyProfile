{"remainingRequest":"/home/dannu/node/JN/companyProfile/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dannu/node/JN/companyProfile/client/src/components/PostComponent.vue?vue&type=style&index=0&id=043ff5bd&scoped=true&lang=css&","dependencies":[{"path":"/home/dannu/node/JN/companyProfile/client/src/components/PostComponent.vue","mtime":1576754523488},{"path":"/home/dannu/node/JN/companyProfile/client/node_modules/css-loader/dist/cjs.js","mtime":1576753877176},{"path":"/home/dannu/node/JN/companyProfile/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1576753877776},{"path":"/home/dannu/node/JN/companyProfile/client/node_modules/postcss-loader/src/index.js","mtime":1576753877488},{"path":"/home/dannu/node/JN/companyProfile/client/node_modules/cache-loader/dist/cjs.js","mtime":1576753877080},{"path":"/home/dannu/node/JN/companyProfile/client/node_modules/vue-loader/lib/index.js","mtime":1576753877776}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmRpdi5jb250YWluZXJ7CiAgbWF4LXdpZHRoOiA4MDBweDsKICBtYXJnaW46IDAgYXV0bzsKfQoKcC5lcnJvcnsKICBib3JkZXI6IDFweCBzb2xpZCAjZmY1YjVmOwogIGJhY2tncm91bmQtY29sb3I6ICNmZmM1YzE7CiAgcGFkZGluZzogMTBweDsKICBtYXJnaW4tYm90dG9tOiAxNXB4Owp9CgpkaXYucG9zdHsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgYm9yZGVyOiAxcHggc29saWQgIzViZDY1ODsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjYmNmZmI4OwogIHBhZGRpbmc6IDEwcHggMTBweCAzMHB4IDEwcHg7CiAgbWFyZ2luLWJvdHRvbTogMTVweDsKfQoKZGl2LmNyZWF0ZS1hdHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgdG9wOiAwOwogIGxlZnQ6IDA7CiAgcGFkZGluZzogNXB4IDE1cHggNXB4IDE1cHg7CiAgYmFja2dyb3VuZC1jb2xvcjogZGFya2dyZWVuOwogIGNvbG9yOiB3aGl0ZTsKICBmb250LXNpemU6IDEzcHg7Cn0KCnAudGV4dHsKICBmb250LXNpemU6IDIycHg7CiAgZm9udC13ZWlnaHQ6IDcwMDsKICBtYXJnaW4tYm90dG9tOiAwOwp9Cg=="},{"version":3,"sources":["PostComponent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"PostComponent.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n      <h1>Latest Posts</h1>\n      <!-- Create post here -->\n\n        <div class=\"create-post\">\n          <label for=\"create-post\">Say Something..</label>\n          <input type=\"text\" id=\"create-post\" v-model=\"text\" placeholder=\"Create a post\">\n          <button v-on:click=\"createPost\">Post</button>\n        </div>\n\n      <hr>\n      <p class=\"error\" v-if=\"error\">{{ error }}</p>\n      <div class=\"posts-container\">\n        <div class=\"post\"\n          v-for=\"(post, index) in posts\"\n          v-bind:item=\"post\"\n          v-bind:index=\"index\"\n          v-bind:key=\"post._id\"\n        >\n          {{`${post.createdAt.getDate()}/${post.createdAt.getMonth()}\n            /${post.createdAt.getFullYear()}`}}\n         <p class=\"text\">{{ post.text }}</p>\n        </div>\n      </div>\n  </div>\n</template>\n\n<script>\nimport PostService from '../PostService'\n\nexport default {\n  name: 'PostComponent',\n  data(){\n    return{\n      posts: [],\n      error: '',\n      text: ''\n    }\n  },\n  async created(){\n    try{\n      this.posts = await PostService.getPosts();\n    }catch(err){\n      this.error = err.message;\n    }\n  },\n  methods:{\n    async createPost() {\n      await PostService.insertPost(this.text);\n       this.posts = await PostService.getPosts();\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\ndiv.container{\n  max-width: 800px;\n  margin: 0 auto;\n}\n\np.error{\n  border: 1px solid #ff5b5f;\n  background-color: #ffc5c1;\n  padding: 10px;\n  margin-bottom: 15px;\n}\n\ndiv.post{\n  position: relative;\n  border: 1px solid #5bd658;\n  background-color: #bcffb8;\n  padding: 10px 10px 30px 10px;\n  margin-bottom: 15px;\n}\n\ndiv.create-at{\n  position: absolute;\n  top: 0;\n  left: 0;\n  padding: 5px 15px 5px 15px;\n  background-color: darkgreen;\n  color: white;\n  font-size: 13px;\n}\n\np.text{\n  font-size: 22px;\n  font-weight: 700;\n  margin-bottom: 0;\n}\n</style>\n"]}]}